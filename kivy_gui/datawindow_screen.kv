#:kivy 1.11.1
#:import main main

<DataWindow>:
    # these are global variables to reference objects below
    # format: [variable name in code]: [id name in kv file]
    fav_list_name: fav_list_name
    sys_name: sys_name
    dept_name: dept_name
    site_name: site_name
    unit_ids: unit_ids
    unit_ids_name_tag: unit_ids_name_tag
    transmission_start: trans_begins
    transmission_end: trans_ends
    total_time: tot_time
    command_input: _command_input

    dw_popover_window: _dw_popover_window
    dw_popover_label: _dw_popover_label

    scan_status_button: scanner_status
#    tgid_hld: tgid_hld

    GridLayout:
        id: 'main_container'
        cols: 2
        width: root.width
        height: root.height

        RelativeLayout:
#            centered_x: _centered_x

            PopoverWindow:
                id: _dw_popover_window
#                _centered_x: (_left_side.width - self.width) / 2, (_left_side.height - self.height) / 2
                size_hint: .8, .8
                pos: (_left_side.width - self.width) / 2, (_left_side.height - self.height) / 2

#                pos: _centered_x

                PopoverLabel:
                    id: _dw_popover_label
                    text: "popover text"

                    canvas.before:
                        Color:
                            rgba: (1,1,1,0.9)
                        Rectangle:
                            size: self.size
                            pos: self.pos

            LargeTextDisplayPanel:
                id: _left_side

                BoxLayout:
                    id: _top_row
                    orientation: "horizontal"

                    TouchArea:
                        id: unit_ids_name_tag
                        text: "UnitIds:NameTag"
                        color: 1, 1, .1, .90
                        size_hint_x: .5

                    TouchArea:
                        id: tgid_hld
                        strikethrough: False
                        text: "TGID:Name"
                        on_press: root.scanner_hold("chan")


                TouchArea:
                    id: dept_name
                    text: "Department:Name"
                    on_press: root.scanner_hold("dept")

                TouchArea:
                    id: sys_name
                    text: "System:Name"
                    on_press: root.scanner_hold("system")

                TouchArea:
                    id: site_name
                    text: "Site:Name"
                    on_press: root.site_hold()

                Label:
                    id: fav_list_name
                    text: "Favorites List"

                Label:
                    id: unit_ids
                    text: "UnitIds"

                BoxLayout:
                    id: _transmission_times
                    orientation: 'horizontal'

                    Label:
                        id: trans_begins
                        text: "Transmission Start Time"
                        font_size: '15sp'

                    Label:
                        id: trans_ends
                        text: "Transmission End Time"
                        font_size: '15sp'

                    Label:
                        id: tot_time
                        text: "Total Time"
                        font_size: '15sp'

        RightSidePanel:
            id: _right_side

            MenuBar:
                id: _first_row

                CommandLine:
                    id: _command_input
#                    text: "GLT,FL"
                    on_text_validate:
                        root.update_unid(args[0])
                        self.focus = False       # unfocus before cancel sel
                        self.cancel_selection()  # gets rid of handles

            MenuBar:
                id: _second_row

                NumericKeypad:
                    id: _set_unid
                    text: "Set\nUNID"
                    on_press: root.open_unid_menu()

                NumericKeypad:
                    id: _avoid_key
                    text: "AVOID"
                    on_press: root.keypad_press(keypad_key="avoid")

#                NumericKeypad:
#                    id: _six
#                    text: "6"

            MenuBar:
                id: _third_row

                NumericKeypad:
                    id: _prev
                    text: "prev"
                    on_press: root.keypad_press(keypad_key="vleft")

                NumericKeypad:
                    id: _next
                    text: "next"
                    on_press: root.keypad_press(keypad_key="vright")

#                NumericKeypad:
#                    id: _three
#                    text: "3"

            MenuBar:
                id: _fourth_row

#                NumericKeypad:
#                    id: _zero
##                    text: "0"
#
#                NumericKeypad:
#                    id: _period
##                    text: "."
#
#                NumericKeypad:
#                    id: _enter
##                    text: "enter"

#                Button:
#                    id: print_data
#                    text: "print GSI data"
#                    on_press: root.print_data()

            MenuBar:
                id: _fifth_row

                Button:
                    id: scanner_status
                    text: "Mirron\nScanner"
                    on_press: root.scanner_status_btn()

                Button:
                    text: "Stop\nDisplay"
                    on_press: root.scanner_disconnect_btn()



            MenuBar:
                id: _sixth_row

                Button:
                    text: "Forward\n->"
                    on_press:
                        root.manager.transition.direction = 'left'
                        root.manager.current = 'playback'

#<KeyboardScreen>:
#    display_label: _display_label
#    kb_container: _kb_container
#
#    BoxLayout:
#        orientation: 'vertical'
#        Label:
#            size_hint_y: 0.15
#            text: "Available Keyboard Layouts"
#        BoxLayout:
#            id: _kb_container
#            size_hint_y: 0.2
#            orientation: "horizontal"
#            padding: 10
#        Label:
#            id: _display_label
#            size_hint_y: 0.15
#            markup: True
#            text: "[b]Key pressed[/b] - None"
#            halign: "center"
#        Button:
#            text: "Back"
#            size_hint_y: 0.1
#            on_release: root.manager.current = "mode"
#        Widget:
#            # Just a space taker to allow for the popup keyboard
#            size_hint_y: 0.5
#
#<ModeScreen>:
#    center_label: _center_label
#    mode_spinner: _mode_spinner
#    FloatLayout:
#        BoxLayout:
#            orientation: "vertical"
#            size_hint: 0.8, 0.8
#            pos_hint: {"x": 0.1, "y": 0.1}
#            padding: "5sp"
#            spacing: "5sp"
#            Label:
#                canvas:
#                    Color:
#                        rgba: 0, 0, 1, 0.3
#                    Rectangle:
#                        pos: self.pos
#                        size: self.size
#                text: "Custom Keyboard Demo"
#                size_hint_y: 0.1
#            Label:
#                id: _center_label
#                markup: True
#                size_hint_y: 0.6
#            BoxLayout:
#                orientation: "horizontal"
#                size_hint_y: 0.1
#                padding: "5sp"
#                Widget:
#                    size_hint_x: 0.2
#                Label:
#                    text: "Current keyboard mode :"
#                Spinner:
#                    id: _mode_spinner
#                    values: "''", "'dock'", "'system'", "'systemanddock'", "'systemandmulti'"
#                Button:
#                    text: "Set"
#                    on_release: root.set_mode(_mode_spinner.text)
#                Widget:
#                    size_hint_x: 0.2
#            Widget:
#                size_hint_y: 0.1
#            BoxLayout:
#                orientation: "horizontal"
#                size_hint_y: 0.1
#                Button:
#                    text: "Exit"
#                    on_release: exit()
#                Button:
#                    text: "Continue"
#                    on_release: root.next()